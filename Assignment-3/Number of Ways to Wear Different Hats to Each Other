def numberWays(hats):
    MOD = 10**9 + 7
    n = len(hats)
    hats.sort(key=lambda x: len(x))
    dp = [{} for _ in range(1 << n)]
    dp[0][()] = 1
    
    for mask in range(1 << n):
        for i in range(n):
            if (mask >> i) & 1:
                for hat in hats[i]:
                    prev_mask = mask ^ (1 << i)
                    for prev_hats, count in dp[prev_mask].items():
                        dp[mask].setdefault(prev_hats + (hat,), 0)
                        dp[mask][prev_hats + (hat,)] += count
                        dp[mask][prev_hats + (hat,)] %= MOD
    
    return sum(count for hats, count in dp[-1].items() if len(hats) == n) % MOD
